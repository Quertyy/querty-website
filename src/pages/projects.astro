---
import { AppConfig } from '@/utils/AppConfig';
import Base from '@/layouts/Base.astro';
import Section from '@/components/Section.astro';
import ProjectCard from '@/components/ProjectCard.astro';

const { title } = AppConfig;
const { description } = AppConfig;

const allProjects = await Astro.glob('./projects/*.md');

function parseBuildTime(buildTime: any) {
  const parts = buildTime.split(' - ');
  const startDate = parts[0];
  
  if (startDate.includes('-')) {
    const [month, year] = startDate.split('-');
    return new Date(`${year}-${month}-01`);
  } else {
    const [month, year] = startDate.split(' ');
    const monthIndex = new Date(Date.parse(month + " 1, 2000")).getMonth();
    return new Date(year, monthIndex);
  }
}

const sortedProjects = allProjects.sort((a: any, b: any) => {
  const dateA = parseBuildTime(a.frontmatter.buildTime);
  const dateB = parseBuildTime(b.frontmatter.buildTime);
  return dateB.getTime() - dateA.getTime();
});

---

<Base head={{ title, description }}>
  <Section>
    <h1 class="text-3xl font-bold mb-6">Projects</h1>
    
    <div class="mb-8">
      <h2 class="text-xl font-semibold mb-4">Table of Contents</h2>
      <div class="bg-gray-100 dark:bg-gray-800 rounded-lg p-4 font-mono text-sm overflow-x-auto">
        <pre><code>{sortedProjects.map((project, index) => 
`${index + 1}. ${project.frontmatter.title}
`).join('\n')}</code></pre>
      </div>
    </div>

    <div id="projects-container">
      {sortedProjects.map((project) => (
        <ProjectCard project={project} />
      ))}
    </div>
  </Section>
</Base>